import { gql, type GraphQLClient } from 'graphql-request'
import type * as Types from './graphql'


export function getContentType(client: GraphQLClient, variables: Types.getContentTypeQueryVariables) : Promise<Types.getContentTypeQuery>
{
  const query = gql`query getContentType($key: String!, $version: String, $locale: [Locales!], $path: String = "-", $domain: String) { content: _Content( variation: {include: ALL} where: {_or: [{_metadata: {key: {eq: $key}, version: {eq: $version}}}, {_metadata: {url: {hierarchical: {eq: $path}, base: {eq: $domain}}, version: {eq: $version}}}]} locale: $locale ) { total items: item { _metadata { types } } } }`
  return client.request<Types.getContentTypeQuery, Types.getContentTypeQueryVariables>(query, variables)
}
export function getContentByPath(client: GraphQLClient, variables: Types.getContentByPathQueryVariables) : Promise<Types.getContentByPathQuery>
{
  const query = gql`query getContentByPath($path: [String!]!, $locale: [Locales!], $siteId: String, $changeset: String = null) { content: _Content( where: {_metadata: {url: {default: {in: $path}, base: {eq: $siteId}}, changeset: {eq: $changeset}}} locale: $locale ) { total items: item { ...IContentData ...PageData ...BlankExperienceData ...BlogSectionExperienceData ...TestExpData ...BlogData ...BlogPostPageData ...HomePageData ...LandingPageData ...NextjsPageData ...RacesData ...TemplateBySuneelData ...examplePageData ...examplePage1Data ...examplePage3Data } } } fragment BlankExperienceData on BlankExperience { BlankExperienceSeoSettings { ...PageSeoSettingsPropertyData } ...ExperienceData } fragment BlogSectionExperienceData on BlogSectionExperience { ...ExperienceData } fragment TestExpData on TestExp { BlankExperienceSeoSettings { ...PageSeoSettingsPropertyData } ...ExperienceData } fragment BlogData on Blog { Title } fragment BlogPostPageData on BlogPostPage { blogTitle: Heading blogSubtitle: ArticleSubHeading blogImage: BlogPostPromoImage { ...ReferenceData } blogBody: BlogPostBody { json } blogAuthor: ArticleAuthor blogTopics: Topic continueReading { ...IContentListItem ...BlockData ...ImageMediaComponentData ...VideoMediaComponentData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment HomePageData on HomePage { Meta { ...PageSeoSettingsPropertyData } } fragment LandingPageData on LandingPage { TopContentArea { ...BlockData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } MainContentArea { ...BlockData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment NextjsPageData on NextjsPage { Title block { ...NextCompPropertyData } } fragment RacesData on Races { Race_Title } fragment TemplateBySuneelData on TemplateBySuneel { Choice } fragment examplePageData on examplePage { heading } fragment examplePage1Data on examplePage1 { heading } fragment examplePage3Data on examplePage3 { heading } fragment IContentData on _IContent { _metadata { ...IContentInfo } _type: __typename } fragment PageData on _IContent { ...IContentData } fragment PageSeoSettingsPropertyData on PageSeoSettingsProperty { MetaTitle MetaDescription MetaKeywords SharingImage { ...ReferenceData } GraphType } fragment ExperienceData on _IExperience { composition { ...CompositionNodeData nodes { ...CompositionNodeData ... on ICompositionStructureNode { nodes { ...CompositionNodeData ... on ICompositionStructureNode { nodes { ...CompositionNodeData ... on ICompositionStructureNode { nodes { ...CompositionNodeData ...CompositionComponentNodeData } } } } } } ...CompositionComponentNodeData } } } fragment ReferenceData on ContentReference { key url { ...LinkData } } fragment LinkData on ContentUrl { base default } fragment CompositionNodeData on ICompositionNode { name: displayName layoutType: nodeType type key template: displayTemplateKey settings: displaySettings { key value } } fragment CompositionComponentNodeData on ICompositionComponentNode { component { ...BlockData ...ElementData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment ArticleListElementData on ArticleListElement { articleListCount topics } fragment BlockbysuneelData on Blockbysuneel { BaseText content { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } block { ...CTAElementPropertyData } Dropdown Number checkBox } fragment ButtonBlockData on ButtonBlock { children: ButtonText url: ButtonUrl { ...LinkData } className: ButtonClass buttonType: ButtonType buttonVariant: ButtonVariant } fragment CTAElementData on CTAElement { cta_text: Text cta_link: Link { ...LinkData } } fragment CarouselBlockData on CarouselBlock { CarouselItemsContentArea { ...IContentListItem ...BlockData ...ImageMediaComponentData ...VideoMediaComponentData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment CategoriesData on Categories { empty: _metadata { key } } fragment ContentRecsElementData on ContentRecsElement { ElementDeliveryApiKey ElementRecommendationCount } fragment ContentTileData on ContentTile { Heading ContentTiles { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } } fragment ContinueReadingComponentData on ContinueReadingComponent { topline shared heading content { ...IContentData ...BlockData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment HeadingElementData on HeadingElement { headingText } fragment HeroBlockData on HeroBlock { heroImage: HeroImage { ...ReferenceData } eyebrow: Eyebrow heroHeading: Heading heroSubheading: SubHeading heroDescription: Description { json html } heroColor: HeroColor heroButton: HeroButton { ...ButtonBlockPropertyData } } fragment ImageElementData on ImageElement { altText imageLink { ...ReferenceData item { graphId: _id ... on cmp_PublicImageAsset { alt: Title src: Url } } } } fragment LayoutSettingsBlockData on LayoutSettingsBlock { mainMenu { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } contactInfoHeading serviceButtons { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } contactInfo { json html } footerMenus { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } copyright legalLinks { ...LinkItemData } appIdentifiers } fragment Masthead_bannerData on Masthead_banner { Left_Image { ...ImageMediaComponentData } Right_Image { ...ImageMediaComponentData } Title Main_Content { json html } CTA { ...CTAElementPropertyData } } fragment MegaMenuGroupBlockData on MegaMenuGroupBlock { _metadata { displayName } MenuMenuHeading MegaMenuUrl { ...LinkData } MegaMenuContentArea { ...IContentData ...MenuNavigationBlockData ...BlogPostPageMenuBlock } } fragment MenuNavigationBlockData on MenuNavigationBlock { _metadata { displayName } MenuNavigationHeading NavigationLinks { ...LinkItemData } } fragment NextCompData on NextComp { Title } fragment OdpEmbedBlockData on OdpEmbedBlock { ContentId } fragment PageBlockData on PageBlock { BlogItems { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } } fragment PageSeoSettingsData on PageSeoSettings { MetaTitle MetaDescription MetaKeywords SharingImage { ...ReferenceData } GraphType } fragment ParagraphElementData on ParagraphElement { text { json } } fragment QuoteBlockData on QuoteBlock { quote: QuoteText color: QuoteColor active: QuoteActive name: QuoteProfileName profilePicture: QuoteProfilePicture { ...ReferenceData } location: QuoteProfileLocation } fragment RichTextElementData on RichTextElement { text { json html } } fragment TestComponentData on TestComponent { Title Content { ...HeroBlockPropertyData } } fragment TestimonialElementData on TestimonialElement { customerName customerLocation customerImage { ...ReferenceData } referenceTitle referenceText { json } } fragment TextBlockData on TextBlock { overline: TextBlockOverline headingSize: TextBlockHeadingSize heading: TextBlockHeading description: TextBlockDescription { json html } center: TextCenter width: TextBlockWidth className: TextClassName } fragment VideoElementData on VideoElement { title video { ...ReferenceData } placeholder { ...ReferenceData } } fragment testData on test { empty: _metadata { key } } fragment BlankSectionData on BlankSection { _metadata { key } } fragment CustomSectionData on CustomSection { empty: _metadata { key } } fragment ElementData on _IComponent { ...IElementData } fragment BlockData on _IComponent { ...IContentData } fragment CTAElementPropertyData on CTAElementProperty { Text Link { ...LinkData } } fragment ImageMediaComponentData on ImageMedia { alt: AltText meta: _metadata { url { default } name: displayName } } fragment VideoMediaComponentData on VideoMedia { meta: _metadata { url { default } name: displayName } } fragment IContentListItem on _IContent { ...IContentData } fragment ButtonBlockPropertyData on ButtonBlockProperty { children: ButtonText url: ButtonUrl { ...LinkData } className: ButtonClass buttonType: ButtonType buttonVariant: ButtonVariant } fragment LinkItemData on Link { title text target url { ...LinkData } } fragment BlogPostPageMenuBlock on BlogPostPage { meta: _metadata { published url { ...LinkData } } topics: Topic heading: Heading author: ArticleAuthor image: BlogPostPromoImage { ...ReferenceData } sharing: SeoSettings { description: MetaDescription image: SharingImage { ...ReferenceData } } } fragment HeroBlockPropertyData on HeroBlockProperty { HeroImage { ...ReferenceData } Icon Eyebrow Heading SubHeading Description { json html } HeroColor HeroButton { ...ButtonBlockPropertyData } } fragment IElementData on _IComponent { _metadata { ...IContentInfo } _type: __typename } fragment IContentInfo on IContentMetadata { key locale types displayName version url { ...LinkData } } fragment NextCompPropertyData on NextCompProperty { Title }`
  return client.request<Types.getContentByPathQuery, Types.getContentByPathQueryVariables>(query, variables)
}
export function getContentById(client: GraphQLClient, variables: Types.getContentByIdQueryVariables) : Promise<Types.getContentByIdQuery>
{
  const query = gql`query getContentById($key: String!, $version: String, $locale: [Locales!], $path: String = "-", $domain: String, $changeset: String) { content: _Content( variation: {include: ALL} where: {_or: [{_metadata: {key: {eq: $key}, version: {eq: $version}}}, {_metadata: {url: {default: {eq: $path}, base: {eq: $domain}}, version: {eq: $version}}}], _metadata: {changeset: {eq: $changeset}}} locale: $locale ) { total items: item { ...IContentData ...BlockData ...PageData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData ...BlankExperienceData ...BlogSectionExperienceData ...TestExpData ...BlogData ...BlogPostPageData ...HomePageData ...LandingPageData ...NextjsPageData ...RacesData ...TemplateBySuneelData ...examplePageData ...examplePage1Data ...examplePage3Data } } } fragment ArticleListElementData on ArticleListElement { articleListCount topics } fragment BlockbysuneelData on Blockbysuneel { BaseText content { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } block { ...CTAElementPropertyData } Dropdown Number checkBox } fragment ButtonBlockData on ButtonBlock { children: ButtonText url: ButtonUrl { ...LinkData } className: ButtonClass buttonType: ButtonType buttonVariant: ButtonVariant } fragment CTAElementData on CTAElement { cta_text: Text cta_link: Link { ...LinkData } } fragment CarouselBlockData on CarouselBlock { CarouselItemsContentArea { ...IContentListItem ...BlockData ...ImageMediaComponentData ...VideoMediaComponentData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment CategoriesData on Categories { empty: _metadata { key } } fragment ContentRecsElementData on ContentRecsElement { ElementDeliveryApiKey ElementRecommendationCount } fragment ContentTileData on ContentTile { Heading ContentTiles { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } } fragment ContinueReadingComponentData on ContinueReadingComponent { topline shared heading content { ...IContentData ...BlockData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment HeadingElementData on HeadingElement { headingText } fragment HeroBlockData on HeroBlock { heroImage: HeroImage { ...ReferenceData } eyebrow: Eyebrow heroHeading: Heading heroSubheading: SubHeading heroDescription: Description { json html } heroColor: HeroColor heroButton: HeroButton { ...ButtonBlockPropertyData } } fragment ImageElementData on ImageElement { altText imageLink { ...ReferenceData item { graphId: _id ... on cmp_PublicImageAsset { alt: Title src: Url } } } } fragment LayoutSettingsBlockData on LayoutSettingsBlock { mainMenu { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } contactInfoHeading serviceButtons { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } contactInfo { json html } footerMenus { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } copyright legalLinks { ...LinkItemData } appIdentifiers } fragment Masthead_bannerData on Masthead_banner { Left_Image { ...ImageMediaComponentData } Right_Image { ...ImageMediaComponentData } Title Main_Content { json html } CTA { ...CTAElementPropertyData } } fragment MegaMenuGroupBlockData on MegaMenuGroupBlock { _metadata { displayName } MenuMenuHeading MegaMenuUrl { ...LinkData } MegaMenuContentArea { ...IContentData ...MenuNavigationBlockData ...BlogPostPageMenuBlock } } fragment MenuNavigationBlockData on MenuNavigationBlock { _metadata { displayName } MenuNavigationHeading NavigationLinks { ...LinkItemData } } fragment NextCompData on NextComp { Title } fragment OdpEmbedBlockData on OdpEmbedBlock { ContentId } fragment PageBlockData on PageBlock { BlogItems { ...IContentListItem ...ImageMediaComponentData ...VideoMediaComponentData } } fragment PageSeoSettingsData on PageSeoSettings { MetaTitle MetaDescription MetaKeywords SharingImage { ...ReferenceData } GraphType } fragment ParagraphElementData on ParagraphElement { text { json } } fragment QuoteBlockData on QuoteBlock { quote: QuoteText color: QuoteColor active: QuoteActive name: QuoteProfileName profilePicture: QuoteProfilePicture { ...ReferenceData } location: QuoteProfileLocation } fragment RichTextElementData on RichTextElement { text { json html } } fragment TestComponentData on TestComponent { Title Content { ...HeroBlockPropertyData } } fragment TestimonialElementData on TestimonialElement { customerName customerLocation customerImage { ...ReferenceData } referenceTitle referenceText { json } } fragment TextBlockData on TextBlock { overline: TextBlockOverline headingSize: TextBlockHeadingSize heading: TextBlockHeading description: TextBlockDescription { json html } center: TextCenter width: TextBlockWidth className: TextClassName } fragment VideoElementData on VideoElement { title video { ...ReferenceData } placeholder { ...ReferenceData } } fragment testData on test { empty: _metadata { key } } fragment BlankExperienceData on BlankExperience { BlankExperienceSeoSettings { ...PageSeoSettingsPropertyData } ...ExperienceData } fragment BlogSectionExperienceData on BlogSectionExperience { ...ExperienceData } fragment TestExpData on TestExp { BlankExperienceSeoSettings { ...PageSeoSettingsPropertyData } ...ExperienceData } fragment BlogData on Blog { Title } fragment BlogPostPageData on BlogPostPage { blogTitle: Heading blogSubtitle: ArticleSubHeading blogImage: BlogPostPromoImage { ...ReferenceData } blogBody: BlogPostBody { json } blogAuthor: ArticleAuthor blogTopics: Topic continueReading { ...IContentListItem ...BlockData ...ImageMediaComponentData ...VideoMediaComponentData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment HomePageData on HomePage { Meta { ...PageSeoSettingsPropertyData } } fragment LandingPageData on LandingPage { TopContentArea { ...BlockData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } MainContentArea { ...BlockData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment NextjsPageData on NextjsPage { Title block { ...NextCompPropertyData } } fragment RacesData on Races { Race_Title } fragment TemplateBySuneelData on TemplateBySuneel { Choice } fragment examplePageData on examplePage { heading } fragment examplePage1Data on examplePage1 { heading } fragment examplePage3Data on examplePage3 { heading } fragment BlankSectionData on BlankSection { _metadata { key } } fragment CustomSectionData on CustomSection { empty: _metadata { key } } fragment IContentData on _IContent { _metadata { ...IContentInfo } _type: __typename } fragment BlockData on _IComponent { ...IContentData } fragment PageData on _IContent { ...IContentData } fragment CTAElementPropertyData on CTAElementProperty { Text Link { ...LinkData } } fragment ImageMediaComponentData on ImageMedia { alt: AltText meta: _metadata { url { default } name: displayName } } fragment VideoMediaComponentData on VideoMedia { meta: _metadata { url { default } name: displayName } } fragment IContentListItem on _IContent { ...IContentData } fragment LinkData on ContentUrl { base default } fragment ButtonBlockPropertyData on ButtonBlockProperty { children: ButtonText url: ButtonUrl { ...LinkData } className: ButtonClass buttonType: ButtonType buttonVariant: ButtonVariant } fragment ReferenceData on ContentReference { key url { ...LinkData } } fragment LinkItemData on Link { title text target url { ...LinkData } } fragment BlogPostPageMenuBlock on BlogPostPage { meta: _metadata { published url { ...LinkData } } topics: Topic heading: Heading author: ArticleAuthor image: BlogPostPromoImage { ...ReferenceData } sharing: SeoSettings { description: MetaDescription image: SharingImage { ...ReferenceData } } } fragment HeroBlockPropertyData on HeroBlockProperty { HeroImage { ...ReferenceData } Icon Eyebrow Heading SubHeading Description { json html } HeroColor HeroButton { ...ButtonBlockPropertyData } } fragment PageSeoSettingsPropertyData on PageSeoSettingsProperty { MetaTitle MetaDescription MetaKeywords SharingImage { ...ReferenceData } GraphType } fragment ExperienceData on _IExperience { composition { ...CompositionNodeData nodes { ...CompositionNodeData ... on ICompositionStructureNode { nodes { ...CompositionNodeData ... on ICompositionStructureNode { nodes { ...CompositionNodeData ... on ICompositionStructureNode { nodes { ...CompositionNodeData ...CompositionComponentNodeData } } } } } } ...CompositionComponentNodeData } } } fragment CompositionNodeData on ICompositionNode { name: displayName layoutType: nodeType type key template: displayTemplateKey settings: displaySettings { key value } } fragment CompositionComponentNodeData on ICompositionComponentNode { component { ...BlockData ...ElementData ...ArticleListElementData ...BlockbysuneelData ...ButtonBlockData ...CTAElementData ...CarouselBlockData ...CategoriesData ...ContentRecsElementData ...ContentTileData ...ContinueReadingComponentData ...HeadingElementData ...HeroBlockData ...ImageElementData ...LayoutSettingsBlockData ...Masthead_bannerData ...MegaMenuGroupBlockData ...MenuNavigationBlockData ...NextCompData ...OdpEmbedBlockData ...PageBlockData ...PageSeoSettingsData ...ParagraphElementData ...QuoteBlockData ...RichTextElementData ...TestComponentData ...TestimonialElementData ...TextBlockData ...VideoElementData ...testData ...BlankSectionData ...CustomSectionData } } fragment ElementData on _IComponent { ...IElementData } fragment IElementData on _IComponent { _metadata { ...IContentInfo } _type: __typename } fragment IContentInfo on IContentMetadata { key locale types displayName version url { ...LinkData } } fragment NextCompPropertyData on NextCompProperty { Title }`
  return client.request<Types.getContentByIdQuery, Types.getContentByIdQueryVariables>(query, variables)
}

